# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: whim-bot

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: nodejs6.10
  region: eu-west-1
  environment:
    WHIM_API_KEY: ${file(./dev-env.yml):WHIM_API_KEY}
    WHIM_API_URL: ${file(./dev-env.yml):WHIM_API_URL}
    WHIM_BOOKED_PIC: ${file(./dev-env.yml):WHIM_BOOKED_PIC}
    WHIM_BOOKED_URL: ${file(./dev-env.yml):WHIM_BOOKED_URL}
    GOOGLE_API_KEY: ${file(./dev-env.yml):GOOGLE_API_KEY}
    BOT_FRONTEND_URL: ${file(./dev-env.yml):BOT_FRONTEND_URL}
    BOT_LOGO_URL: ${file(./dev-env.yml):BOT_LOGO_URL}
    MICROSOFT_APP_ID: ${file(./dev-env.yml):MICROSOFT_APP_ID}
    MICROSOFT_APP_PASSWORD: ${file(./dev-env.yml):MICROSOFT_APP_PASSWORD}
    YELP_APP_ID: ${file(./dev-env.yml):YELP_APP_ID}
    YELP_APP_SECRET: ${file(./dev-env.yml):YELP_APP_SECRET}
    YELP_ACCESS_TOKEN: ${file(./dev-env.yml):YELP_ACCESS_TOKEN}
    FB_PAGE_TOKEN: ${file(./dev-env.yml):FB_PAGE_TOKEN}

# you can overwrite defaults here
stage: dev
region: eu-west-1

# you can add statements to the Lambda function's IAM Role here
#  iamRoleStatements:
#    - Effect: "Allow"
#      Action:
#        - "s3:ListBucket"
#      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#    - Effect: "Allow"
#      Action:
#        - "s3:PutObject"
#      Resource:
#        Fn::Join:
#          - ""
#          - - "arn:aws:s3:::"
#            - "Ref" : "ServerlessDeploymentBucket"
#            - "/*"

# you can define service wide environment variables here
#  environment:
#    variable1: value1

# you can add packaging information here
#package:
#  include:
#    - persistent-menu.json
#    - index.js
#    - requests.js
#    - responses.js
#    - persistent-menu.json
#    - include-me.js
#    - include-me-dir/**
#  exclude:
#    - exclude-me.js
#    - exclude-me-dir/**
plugins:
  - serverless-offline

functions:
  static:
    handler: responses.index
    events:
      - http: 
          path: style.css
          method: get
      - http: 
          path: index.html
          method: get
      - http: 
          path: factor2.html
          method: get
      - http: 
          path: scripts.js
          method: get
  message:
    handler: index.listener
    timeout: 15
    events:
      - http:
          path: api/messages
          method: POST
  login:
    handler: index.factors
    events:
      - http:
          path: factor1
          method: GET
          cors: true
        
      - http:
          path: factor2
          method: GET
          cors: true
         
#    The following are a few example events you can configure
#    NOTE: Please make sure to change your handler code to work with those events
#    Check the event documentation for details
#    events:
#      - http:
#          path: users/create
#          method: get
#      - s3: ${env:BUCKET}
#      - schedule: rate(10 minutes)
#      - sns: greeter-topic
#      - stream: arn:aws:dynamodb:region:XXXXXX:table/foo/stream/1970-01-01T00:00:00.000
#      - alexaSkill
#      - iot:
#          sql: "SELECT * FROM 'some_topic'"
#      - cloudwatchEvent:
#          event:
#            source:
#              - "aws.ec2"
#            detail-type:
#              - "EC2 Instance State-change Notification"
#            detail:
#              state:
#                - pending

#    Define function environment variables here

# you can add CloudFormation resource templates here
#resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
